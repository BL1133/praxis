/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    projects: Project;
    users: User;
    'user-project-relations': UserProjectRelation;
    media: Media;
  };
  globals: {};
}
export interface Project {
  id: string;
  title: string;
  shortDescription: string;
  fullDescription: string;
  createdBy: string | User;
  status: 'inProgress' | 'completed' | 'onHold';
  milestones?: {
    milestone?: string;
    id?: string;
  }[];
  media?: string[] | Media[];
  members?: {
    userId?: string | User;
    role?: 'Maintainer' | 'Mentor' | 'Contributor';
    id?: string;
  }[];
  links: {
    url?: string;
    id?: string;
  }[];
  skillsWanted: ('maintainer' | 'mentor' | 'developer' | 'designer')[];
  tags: (
    | 'javascript'
    | 'python'
    | 'java'
    | 'csharp'
    | 'php'
    | 'ruby'
    | 'typescript'
    | 'swift'
    | 'kotlin'
    | 'cplusplus'
    | 'go'
    | 'rust'
    | 'reactnative'
    | 'flutter'
    | 'xamarin'
    | 'ionic'
    | 'cordova'
    | 'r'
    | 'perl'
    | 'scala'
    | 'clojure'
    | 'elixir'
    | 'elm'
    | 'react'
    | 'nodejs'
    | 'nextjs'
    | 'angular'
    | 'gatsby'
    | 'bootstrap'
    | 'tailwind'
    | 'fastapi'
    | 'graphql'
    | 'vuejs'
    | 'emberjs'
    | 'backbonejs'
    | 'svelte'
    | 'remix'
    | 'django'
    | 'flask'
    | 'rubyonrails'
    | 'laravel'
    | 'springboot'
    | 'expressjs'
    | 'tensorflow'
    | 'apachespark'
    | 'pandas'
    | 'numpy'
    | 'jupyter'
    | 'pytorch'
    | 'keras'
    | 'mysql'
    | 'postgresql'
    | 'mongodb'
    | 'sqlite'
    | 'firebase'
    | 'oracle'
    | 'microsoftsqlserver'
    | 'cassandra'
    | 'redis'
    | 'neo4j'
    | 'couchdb'
    | 'elasticsearch'
    | 'solidity'
    | 'ethereum'
    | 'hyperledger'
    | 'chainlink'
    | 'truffle'
    | 'binancesmartchain'
    | 'cardano'
    | 'polkadot'
    | 'xrp'
    | 'beginner'
    | 'intermediate'
    | 'expert'
    | 'short-term'
    | 'mid-term'
    | 'long-term'
    | 'personal-project'
    | 'startup'
    | 'app'
    | 'website'
    | 'platform'
    | 'saas'
    | 'ai'
    | 'tool'
    | 'social-media'
    | 'e-commerce'
    | 'education'
    | 'info-product'
    | 'automation'
    | 'api'
    | 'content-creator'
    | 'gaming'
    | 'vr-ar'
    | 'web3'
    | '3d'
  )[];
  access?: {
    userId?: string | User;
    permission?: string;
    id?: string;
  }[];
  usedSpace?: number;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  firstName?: string;
  lastName?: string;
  username: string;
  roles: ('admin' | 'user')[];
  createdProjects?: string[] | Project[];
  projectsContributedTo?: string[] | Project[];
  bio?: string;
  skills?: {
    skill?: string;
    id?: string;
  }[];
  socialLinks?: {
    platform?: string;
    id?: string;
  }[];
  lastLogin?: string;
  createdOn?: string;
  updatedOn?: string;
  preferences?: {
    theme?: string;
    language?: string;
  };
  isVerified?: boolean;
  notifications?: {
    notification?: string;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Media {
  id: string;
  alt?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    card?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    tablet?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface UserProjectRelation {
  id: string;
  userId: string | User;
  projectId: string | Project;
  role: {
    roleType?: 'maintainer' | 'mentor' | 'contributor' | 'creator';
    id?: string;
  }[];
  firstContribution?: string;
  contributions?: {
    contribution?: string;
    id?: string;
  }[];
  permissions?: {
    permission?: string;
    id?: string;
  }[];
  lastActivity?: string;
  userFlags?: {
    watching?: boolean;
    id?: string;
  }[];
  updatedAt: string;
  createdAt: string;
}
